facet_wrap(~ Condition, scales = "free_y") +
theme_minimal() +
labs(title = "Histogram: Score Distributions",
x = "Score",
y = "Count",
fill = "Questionnaire") +
scale_fill_manual(values = c("Eco-emotions" = "blue", "STAI" = "green"))
dev.off()
# Load necessary packages
if (!require("pacman")) {
install.packages("pacman")
library(pacman)
}
p_load("tidyverse", "ggplot2")
# Set working directory
setwd("~/Desktop/psy15/data")  # Adjust the path if necessary
# Load Eco-emotions datasets
pre_eco <- read_csv("Eco-emotions 1  - pre_eco-emotions.csv")
post_eco <- read_csv("Eco-emotions 1  - post_eco-emotions.csv")
# Add Participant_ID if missing
add_participant_id <- function(data) {
if (!"Participant_ID" %in% colnames(data)) {
data <- data %>% mutate(Participant_ID = row_number())
}
return(data)
}
pre_eco <- add_participant_id(pre_eco)
post_eco <- add_participant_id(post_eco)
# Calculate average scores for Eco-emotions
calculate_average <- function(data, score_prefix) {
data %>%
rowwise() %>%
mutate(!!score_prefix := mean(c_across(where(is.numeric) & !all_of("Participant_ID")), na.rm = TRUE))
}
pre_eco <- calculate_average(pre_eco, "Average_Eco_Pre")
post_eco <- calculate_average(post_eco, "Average_Eco_Post")
# Combine pre and post data for analysis
eco_data <- tibble(
Participant_ID = pre_eco$Participant_ID,
Pre_Score = pre_eco$Average_Eco_Pre,
Post_Score = post_eco$Average_Eco_Post
)
# Perform paired t-test for Eco-emotions
t_test_eco <- t.test(eco_data$Pre_Score, eco_data$Post_Score, paired = TRUE)
# Print t-test results
cat("Eco-emotions Paired T-Test Results:\n")
print(t_test_eco)
# Save and visualize results
output_dir <- "~/Desktop/psy15"
# Box Plot
png(file = file.path(output_dir, "Eco_Emotions_Boxplot.png"), width = 600, height = 500)
ggplot(eco_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 8) +
theme_minimal() +
labs(title = "Eco-emotions: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("lightblue", "lightgreen"))
dev.off()
# Histogram
png(file = file.path(output_dir, "Eco_Emotions_Histogram.png"), width = 600, height = 500)
ggplot(eco_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(bins = 15, alpha = 0.7, position = "identity") +
theme_minimal() +
labs(title = "Eco-emotions: Score Distributions",
x = "Score",
y = "Count") +
scale_fill_manual(values = c("lightblue", "lightgreen"))
dev.off()
# Load necessary packages
if (!require("pacman")) {
install.packages("pacman")
library(pacman)
}
p_load("tidyverse", "ggplot2")
# Set working directory
setwd("~/Desktop/psy15/data")  # Adjust the path if necessary
# Load Eco-emotions datasets
pre_eco <- read_csv("Eco-emotions 1  - pre_eco-emotions.csv")
post_eco <- read_csv("Eco-emotions 1  - post_eco-emotions.csv")
# Drop non-numeric columns (e.g., Timestamp)
pre_eco <- pre_eco %>% select(where(is.numeric))
post_eco <- post_eco %>% select(where(is.numeric))
# Calculate row-wise averages for pre- and post-intervention scores
pre_eco <- pre_eco %>% mutate(Average_Pre = rowMeans(across(everything()), na.rm = TRUE))
post_eco <- post_eco %>% mutate(Average_Post = rowMeans(across(everything()), na.rm = TRUE))
# Combine pre and post averages for analysis
eco_data <- tibble(
Pre_Score = pre_eco$Average_Pre,
Post_Score = post_eco$Average_Post
)
# Perform paired t-test for Eco-emotions
t_test_eco <- t.test(eco_data$Pre_Score, eco_data$Post_Score, paired = TRUE)
# Print t-test results
cat("Eco-emotions Paired T-Test Results:\n")
print(t_test_eco)
# Save and visualize results
output_dir <- "~/Desktop/psy15"
# Box Plot
png(file = file.path(output_dir, "Eco_Emotions_Boxplot.png"), width = 600, height = 500)
ggplot(eco_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 8) +
theme_minimal() +
labs(title = "Eco-emotions: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("lightblue", "lightgreen"))
dev.off()
# Histogram
png(file = file.path(output_dir, "Eco_Emotions_Histogram.png"), width = 600, height = 500)
ggplot(eco_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(bins = 15, alpha = 0.7, position = "identity") +
theme_minimal() +
labs(title = "Eco-emotions: Score Distributions",
x = "Score",
y = "Count") +
scale_fill_manual(values = c("lightblue", "lightgreen"))
dev.off()
# Load necessary packages
if (!require("pacman")) {
install.packages("pacman")
library(pacman)
}
p_load("tidyverse", "ggplot2")
# Set working directory
setwd("~/Desktop/psy15/data")  # Adjust the path if necessary
# Load STAI datasets
pre_stai <- read_csv("Eco-emotions 1  - pre_stai.csv")
post_stai <- read_csv("Eco-emotions 1  - post_stai.csv")
# Drop non-numeric columns (e.g., Timestamp)
pre_stai <- pre_stai %>% select(where(is.numeric))
post_stai <- post_stai %>% select(where(is.numeric))
# Calculate row-wise averages for pre- and post-intervention scores
pre_stai <- pre_stai %>% mutate(Average_Pre = rowMeans(across(everything()), na.rm = TRUE))
post_stai <- post_stai %>% mutate(Average_Post = rowMeans(across(everything()), na.rm = TRUE))
# Combine pre and post averages for analysis
stai_data <- tibble(
Pre_Score = pre_stai$Average_Pre,
Post_Score = post_stai$Average_Post
)
# Perform paired t-test for STAI
t_test_stai <- t.test(stai_data$Pre_Score, stai_data$Post_Score, paired = TRUE)
# Print t-test results
cat("STAI Paired T-Test Results:\n")
print(t_test_stai)
# Save and visualize results
output_dir <- "~/Desktop/psy15"
# Box Plot
png(file = file.path(output_dir, "STAI_Boxplot.png"), width = 600, height = 500)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 8) +
theme_minimal() +
labs(title = "STAI: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("lightblue", "lightgreen"))
dev.off()
# Histogram
png(file = file.path(output_dir, "STAI_Histogram.png"), width = 600, height = 500)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(bins = 15, alpha = 0.7, position = "identity") +
theme_minimal() +
labs(title = "STAI: Score Distributions",
x = "Score",
y = "Count") +
scale_fill_manual(values = c("lightblue", "lightgreen"))
dev.off()
# Load necessary packages
if (!require("pacman")) {
install.packages("pacman")
library(pacman)
}
p_load("tidyverse", "ggplot2")
# Set working directory
setwd("~/Desktop/psy15/data")  # Adjust the path if necessary
# Load Eco-emotions datasets
pre_eco <- read_csv("Eco-emotions 1  - pre_eco-emotions.csv")
post_eco <- read_csv("Eco-emotions 1  - post_eco-emotions.csv")
# Drop non-numeric columns (e.g., Timestamp)
pre_eco <- pre_eco %>% select(where(is.numeric))
post_eco <- post_eco %>% select(where(is.numeric))
# Calculate row-wise averages for pre- and post-intervention scores
pre_eco <- pre_eco %>% mutate(Average_Pre = rowMeans(across(everything()), na.rm = TRUE))
post_eco <- post_eco %>% mutate(Average_Post = rowMeans(across(everything()), na.rm = TRUE))
# Combine pre and post averages for analysis
eco_data <- tibble(
Pre_Score = pre_eco$Average_Pre,
Post_Score = post_eco$Average_Post
)
# Perform paired t-test for Eco-emotions
t_test_eco <- t.test(eco_data$Pre_Score, eco_data$Post_Score, paired = TRUE)
# Print t-test results
cat("Eco-emotions Paired T-Test Results:\n")
print(t_test_eco)
# Save and visualize results
output_dir <- "~/Desktop/psy15"
# Box Plot
png(file = file.path(output_dir, "Eco_Emotions_Boxplot.png"), width = 600, height = 500)
ggplot(eco_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 8) +
theme_minimal() +
labs(title = "Eco-emotions: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("lightblue", "lightgreen"))
dev.off()
# Histogram
png(file = file.path(output_dir, "Eco_Emotions_Histogram.png"), width = 600, height = 500)
ggplot(eco_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(bins = 15, alpha = 0.7, position = "identity") +
theme_minimal() +
labs(title = "Eco-emotions: Score Distributions",
x = "Score",
y = "Count") +
scale_fill_manual(values = c("lightblue", "lightgreen"))
dev.off()
# Box Plot
png(file = file.path(output_dir, "STAI_Boxplot.png"), width = 600, height = 500)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 8, alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#002b36", color = NA),
panel.grid.major = element_line(color = "#073642"),
panel.grid.minor = element_line(color = "#073642"),
plot.title = element_text(color = "#93a1a1", face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "#839496"),
axis.title = element_text(color = "#839496"),
legend.position = "none"
) +
labs(title = "STAI: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("#586e75", "#859900"))
dev.off()
# Histogram
png(file = file.path(output_dir, "STAI_Histogram.png"), width = 600, height = 500)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(bins = 15, alpha = 0.7, position = "identity") +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#002b36", color = NA),
panel.grid.major = element_line(color = "#073642"),
panel.grid.minor = element_line(color = "#073642"),
plot.title = element_text(color = "#93a1a1", face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "#839496"),
axis.title = element_text(color = "#839496"),
legend.position = "none"
) +
labs(title = "STAI: Score Distributions",
x = "Score",
y = "Count") +
scale_fill_manual(values = c("#586e75", "#859900"))
dev.off()
# Save and visualize results
output_dir <- "~/Desktop/psy15/figures"
# Box Plot
png(file = file.path(output_dir, "STAI_Boxplot.png"), width = 600, height = 500)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 8, alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#002b36", color = NA),
panel.grid.major = element_line(color = "#073642"),
panel.grid.minor = element_line(color = "#073642"),
plot.title = element_text(color = "#93a1a1", face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "#839496"),
axis.title = element_text(color = "#839496"),
legend.position = "none"
) +
labs(title = "STAI: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("#586e75", "#859900"))
dev.off()
# Histogram
png(file = file.path(output_dir, "STAI_Histogram.png"), width = 600, height = 500)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(bins = 15, alpha = 0.7, position = "identity") +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#002b36", color = NA),
panel.grid.major = element_line(color = "#073642"),
panel.grid.minor = element_line(color = "#073642"),
plot.title = element_text(color = "#93a1a1", face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "#839496"),
axis.title = element_text(color = "#839496"),
legend.position = "none"
) +
labs(title = "STAI: Score Distributions",
x = "Score",
y = "Count") +
scale_fill_manual(values = c("#586e75", "#859900"))
dev.off()
# Save and visualize results
output_dir <- "~/Desktop/psy15/figures"
# Box Plot
png(file = file.path(output_dir, "STAI_Boxplot.png"), width = 600, height = 500)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "black", outlier.shape = 16, alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_blank(),
panel.grid.major = element_line(color = "#d9d9d9"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
labs(title = "STAI: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("darkseagreen", "darkolivegreen"))
dev.off()
# Histogram
png(file = file.path(output_dir, "STAI_Histogram.png"), width = 600, height = 500)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(binwidth = 0.1, color = "black", alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_blank(),
panel.grid.major = element_line(color = "#d9d9d9"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
labs(title = "STAI: Score Distributions",
x = "Score",
y = "Frequency") +
scale_fill_manual(values = c("darkseagreen", "darkolivegreen"))
dev.off()
# Save and visualize results
output_dir <- "~/Desktop/psy15/figures"
# Box Plot
png(file = file.path(output_dir, "STAI_Boxplot.png"), width = 600, height = 600)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "black", outlier.shape = 16, alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_blank(),
panel.grid.major = element_line(color = "#d9d9d9"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
labs(title = "STAI: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("darkseagreen", "darkolivegreen"))
dev.off()
# Histogram
png(file = file.path(output_dir, "STAI_Histogram.png"), width = 600, height = 600)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(binwidth = 0.1, color = "black", alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_blank(),
panel.grid.major = element_line(color = "#d9d9d9"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
labs(title = "STAI: Score Distributions",
x = "Score",
y = "Frequency") +
scale_fill_manual(values = c("darkseagreen", "darkolivegreen"))
dev.off()
# Box Plot
png(file = file.path(output_dir, "STAI_Boxplot.png"), width = 700, height = 600)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "black", outlier.shape = 16, alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_blank(),
panel.grid.major = element_line(color = "#d9d9d9"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
labs(title = "STAI: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("darkseagreen", "darkolivegreen"))
dev.off()
# Histogram
png(file = file.path(output_dir, "STAI_Histogram.png"), width = 700, height = 600)
ggplot(stai_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(binwidth = 0.1, color = "black", alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_blank(),
panel.grid.major = element_line(color = "#d9d9d9"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
labs(title = "STAI: Score Distributions",
x = "Score",
y = "Frequency") +
scale_fill_manual(values = c("darkseagreen", "darkolivegreen"))
dev.off()
# Save and visualize results
output_dir <- "~/Desktop/psy15/figures"
# Box Plot
png(file = file.path(output_dir, "Eco_Emotions_Boxplot.png"), width = 600, height = 500)
ggplot(eco_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot(outlier.colour = "black", outlier.shape = 16, alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_blank(),
panel.grid.major = element_line(color = "#d9d9d9"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
labs(title = "Eco-emotions: Comparison of Pre and Post Scores",
x = "Condition",
y = "Score") +
scale_fill_manual(values = c("darkseagreen", "darkolivegreen"))
dev.off()
# Histogram
png(file = file.path(output_dir, "Eco_Emotions_Histogram.png"), width = 600, height = 500)
ggplot(eco_data %>% pivot_longer(cols = c(Pre_Score, Post_Score),
names_to = "Condition",
values_to = "Score"),
aes(x = Score, fill = Condition)) +
geom_histogram(binwidth = 0.1, color = "black", alpha = 0.8) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_blank(),
panel.grid.major = element_line(color = "#d9d9d9"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.text = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
labs(title = "Eco-emotions: Score Distributions",
x = "Score",
y = "Frequency") +
scale_fill_manual(values = c("darkseagreen", "darkolivegreen"))
dev.off()
